---
  - name: "Show remote environment"
    shell: env
  - name: Creates directory
    file:
      path: /home/ubuntu/uda_app
      state: directory

  - name: "Sopy backend binaries"
    become: true
    synchronize:
      src: ../../backend/dist
      dest: /home/ubuntu/uda_app
      recursive: true

  - name: "Sopy node_modules"
    become: true
    synchronize:
      src: ../../backend/node_modules
      dest: /home/ubuntu/uda_app
      recursive: true

  - name: "Selete anything that might already be running"
    become: true
    command: pm2 delete all
    ignore_errors: true

  - name: "Run the web server"
    shell:
      cmd: |
        cd ~/server
        npm install
        pm2 stop default
        pm2 start npm -- start --wait-ready
        environment:
      ENVIRONMENT: production
      TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
      TYPEORM_MIGRATIONS_DIR: "./migrations"
      TYPEORM_MIGRATIONS: "./migrations/*.js"
      TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"

  - name: "Start server"
    become: true
    command: pm2 start -f ./main.js
    args:
      chdir: /home/ubuntu/uda_app/dist
    environment:
      ENVIRONMENT: production
      TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
      TYPEORM_MIGRATIONS_DIR: "./migrations"
      TYPEORM_MIGRATIONS: "./migrations/*.js"
      TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"